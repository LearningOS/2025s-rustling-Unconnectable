// 当在项声明上标记 `unsafe`，例如函数、trait 等时，它同时声明了一个契约。
// 然而，这个契约的内容无法仅通过单个关键字来表达。
// 因此，你有责任在项的文档注释中的 `# Safety` 部分手动说明其内容。
//
// 当在由花括号包围的代码块上标记 `unsafe` 时，
// 它声明了对某个契约的遵守，例如某个指针参数的有效性、某个内存地址的所有权。
// 然而，如上文所述，你仍然需要在代码块的注释中说明如何遵守该契约。
//
// 注意：所有注释都是为了代码的可读性和可维护性，
// 而 Rust 编译器将对你代码的正确性信任交给了你自己！
// 如果你无法证明自己代码的内存安全性和正确性，
// 请退一步，转而使用安全的代码！
